// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/slcan/": {
            "post": {
                "description": "Add new CAN message by specifying CAN ID and data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SLCAN"
                ],
                "summary": "Add new CAN message",
                "parameters": [
                    {
                        "description": "CAN Message",
                        "name": "array",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/main.Message"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/slcan/reboot": {
            "post": {
                "description": "Reboot SLCAN device for firmware update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SLCAN"
                ],
                "summary": "Reboot SLCAN device",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/slcan/{id}": {
            "get": {
                "description": "Retrieve CAN message by specifying CAN ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SLCAN"
                ],
                "summary": "Retrieve CAN message",
                "parameters": [
                    {
                        "maximum": 536870911,
                        "minimum": 0,
                        "type": "integer",
                        "description": "CAN ID",
                        "name": "int",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Message"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "description": "Update existing CAN message by specifying CAN ID and data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SLCAN"
                ],
                "summary": "Update existing CAN message",
                "parameters": [
                    {
                        "description": "CAN Message",
                        "name": "array",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/main.Message"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "description": "Remove CAN message by specifying CAN ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SLCAN"
                ],
                "summary": "Remove CAN message",
                "parameters": [
                    {
                        "maximum": 536870911,
                        "minimum": 0,
                        "type": "integer",
                        "description": "CAN ID",
                        "name": "int",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "main.Message": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "200rpm"
                },
                "id": {
                    "type": "integer",
                    "example": 123
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:port",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Serial-Line CAN Service API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
